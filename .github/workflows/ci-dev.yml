name: CI/CD Pipeline - Dev
on:
  push:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Install dependencies
        run: dotnet restore GERSEMI/GERSEMI.sln  
      - name: Build
        run: dotnet build GERSEMI/GERSEMI.sln --no-restore --configuration Release  
      - name: Run tests
        run: dotnet test GERSEMI/GERSEMI.sln --no-build --configuration Release --collect:"XPlat Code Coverage"  
      - name: Publish Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: '**/TestResults/*.trx'

  build-and-push-docker-images:
    runs-on: ubuntu-latest
    needs: build-and-test
    timeout-minutes: 60  
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push API image for dev branch
        uses: docker/build-push-action@v3
        with:
          context: .
          file: GERSEMI/Presentation/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gersemi-api:dev
          platforms: linux/arm64
      - name: Build and push Client image for dev branch
        uses: docker/build-push-action@v3
        with:
          context: ./GERSEMI.Client
          file: GERSEMI.Client/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gersemi-client:dev
          platforms: linux/arm64

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-images
    if: github.ref == 'refs/heads/dev'
    timeout-minutes: 120  
    steps:
      - name: Deploy to Raspberry Pi (Dev)
        uses: appleboy/ssh-action@v0.1.8
        env:
          DEPLOY_BRANCH: 'dev'
          DOCKER_TAG: 'dev'
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          SA_PASSWORD: ${{ secrets.SA_PASSWORD }}
        with:
          host: ${{ secrets.RASPBERRY_HOST_IP }}
          username: ${{ secrets.RASPBERRY_USERNAME }}
          key: ${{ secrets.RASPBERRY_SSH_KEY }}
          port: ${{ secrets.RASPBERRY_HOST_PORT }}
          script: |
            cd ~/GERSEMI

            # Checkout the deployment branch
            git checkout $DEPLOY_BRANCH

            # Pull the latest changes for the deployment branch
            git pull origin $DEPLOY_BRANCH

            # Debugging: Check git status and latest commit after pull
            echo "After pull:"
            git status
            git log -1

            # Export environment variables for Docker Compose
            export DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME
            export DOCKER_TAG=$DOCKER_TAG

            # Pull the latest Docker images
            docker pull $DOCKERHUB_USERNAME/gersemi-api:$DOCKER_TAG
            docker pull $DOCKERHUB_USERNAME/gersemi-client:$DOCKER_TAG

            # Rebuild and restart Docker containers
            docker-compose -f ~/GERSEMI/GERSEMI/docker-compose.yml up -d --build

            # Optionally, switch back to the main branch to maintain its state
            git checkout main